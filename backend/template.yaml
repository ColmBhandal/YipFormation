AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: SAM template for backend YipCode resources.

Parameters:
  RootDomainName:
    Type: String
    Description: Root domain name for the hosted zone into which we will deploy this workload.
    AllowedValues:
      - yipcode.com
      - dev.yipcode.com
  HostedZoneStackName:
    Type: String
    Description: The name of the stack that contains the hosted zone.
    AllowedValues:
      - dev-yipcode-zone
      - prod-yipcode-zone
  CognitoDomainPrefix:
    Type: String
    Description: Custom prefix for the Cognito domain name. Note- the remainder of the domain name will be AWS-generated.
    AllowedValues:
      - dev-yipcode-auth
      - yipcode-auth

Resources:
  ApiWebCertificate:
      Type: AWS::CertificateManager::Certificate
      Properties:
        DomainName: !Sub "api.${RootDomainName}"
        ValidationMethod: DNS
        DomainValidationOptions:
          - DomainName: !Sub "api.${RootDomainName}"
            HostedZoneId: !ImportValue
              "Fn::Sub": "${HostedZoneStackName}-HostedZoneID"

  Api:
    Type: AWS::Serverless::Api
    Properties:
      StageName: api
      TracingEnabled: true
      OpenApiVersion: 3.0.3
      Auth:
        ResourcePolicy:
          CustomStatements:
            Effect: Allow
            Action: execute-api:Invoke
            Resource:
            - execute-api:/*/*/*
            Principal: '*'
      Domain:
        DomainName: !Sub "api.${RootDomainName}"
        CertificateArn: !Ref ApiWebCertificate
        EndpointConfiguration: EDGE
        Route53:
          HostedZoneId: !ImportValue
            "Fn::Sub": "${HostedZoneStackName}-HostedZoneID"

  Function:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs16.x
      CodeUri: functions/hello/.
      Description: Hello-world code calling the Lambda API and logging some event/env details.
      Timeout: 10
      # Function's execution role
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSLambda_ReadOnlyAccess
        - AWSXrayWriteOnlyAccess
      Tracing: Active
      Events:
        getEndpoint:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /
            Method: GET

  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Ref RootDomainName
      Policies:
        PasswordPolicy:
          MinimumLength: 8
      UsernameAttributes:
        - email
      Schema:
        - AttributeDataType: String
          Name: email
          Required: false
      EmailConfiguration:
        EmailSendingAccount: COGNITO_DEFAULT

  CognitoDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      Domain: !Ref CognitoDomainPrefix
      UserPoolId: !Ref CognitoUserPool

  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref CognitoUserPool
      ClientName: "StandardClient"
      GenerateSecret: false        
      AllowedOAuthFlowsUserPoolClient: true      
      CallbackURLs:
        - http://localhost:3000
      AllowedOAuthFlows:
        - code
      AllowedOAuthScopes:
        - openid
      SupportedIdentityProviders:
        - COGNITO    